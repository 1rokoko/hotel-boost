#!/usr/bin/env python3
"""
Quick Sections Test - –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ü–∏–π
"""

import asyncio
from playwright.async_api import async_playwright

async def quick_test():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ü–∏–π"""
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)
        page = await browser.new_page()
        
        print("‚ö° –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ï–ö–¶–ò–ô")
        print("=" * 40)
        
        try:
            await page.goto("http://localhost:8000/api/v1/admin/dashboard")
            await page.wait_for_load_state('networkidle')
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Dashboard
            dashboard_ok = await page.evaluate('''
                () => {
                    const section = document.getElementById('dashboard-section');
                    if (!section) return false;
                    const rect = section.getBoundingClientRect();
                    return rect.left >= 250;
                }
            ''')
            print(f"üè† Dashboard: {'‚úÖ –û–ö' if dashboard_ok else '‚ùå –ü–†–û–ë–õ–ï–ú–ê'}")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ DeepSeek Settings
            await page.evaluate('''
                () => {
                    const link = document.querySelector('a[data-section="deepseek-settings"]');
                    if (link) link.click();
                }
            ''')
            await page.wait_for_timeout(1000)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º DeepSeek Settings
            deepseek_info = await page.evaluate('''
                () => {
                    const section = document.getElementById('deepseek-settings-section');
                    if (!section) return null;
                    
                    const rect = section.getBoundingClientRect();
                    return {
                        left: rect.left,
                        top: rect.top,
                        width: rect.width,
                        height: rect.height,
                        display: window.getComputedStyle(section).display
                    };
                }
            ''')
            
            if deepseek_info:
                print(f"üß† DeepSeek Settings:")
                print(f"   Left: {deepseek_info['left']}px")
                print(f"   Top: {deepseek_info['top']}px")
                print(f"   Display: {deepseek_info['display']}")
                
                if deepseek_info['left'] >= 250:
                    print(f"   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω")
                else:
                    print(f"   ‚ùå –ü–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å sidebar")
                    
                if deepseek_info['top'] < 200:
                    print(f"   ‚úÖ –ù–µ—Ç –±–µ–ª–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞")
                else:
                    print(f"   ‚ùå –ï—Å—Ç—å –±–µ–ª–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ")
            
            # –°–∫—Ä–∏–Ω—à–æ—Ç
            await page.screenshot(path="quick_test.png", full_page=True)
            print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: quick_test.png")
            
            await page.wait_for_timeout(3000)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        finally:
            await browser.close()

if __name__ == "__main__":
    asyncio.run(quick_test())
