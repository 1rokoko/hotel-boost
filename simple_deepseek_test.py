#!/usr/bin/env python3
"""
Simple DeepSeek Settings Test
"""

import asyncio
from playwright.async_api import async_playwright

async def simple_test():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç DeepSeek Settings"""
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)
        page = await browser.new_page()
        
        print("üß† –ü–†–û–°–¢–û–ô –¢–ï–°–¢ DEEPSEEK SETTINGS")
        print("=" * 40)
        
        try:
            await page.goto("http://localhost:8000/api/v1/admin/dashboard")
            await page.wait_for_load_state('networkidle')
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            
            # –ö–ª–∏–∫–∞–µ–º –Ω–∞ DeepSeek Settings
            await page.click('a[data-section="deepseek-settings"]')
            await page.wait_for_timeout(2000)
            print("‚úÖ –ö–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ DeepSeek Settings")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —Å–µ–∫—Ü–∏–∏
            section_visible = await page.evaluate('''
                () => {
                    const section = document.getElementById('deepseek-settings-section');
                    if (!section) return false;
                    
                    const style = window.getComputedStyle(section);
                    const rect = section.getBoundingClientRect();
                    
                    return {
                        display: style.display,
                        visibility: style.visibility,
                        width: rect.width,
                        height: rect.height,
                        left: rect.left
                    };
                }
            ''')
            
            print(f"üìä –°—Ç–∞—Ç—É—Å —Å–µ–∫—Ü–∏–∏:")
            print(f"   - Display: {section_visible['display']}")
            print(f"   - Visibility: {section_visible['visibility']}")
            print(f"   - Width: {section_visible['width']}px")
            print(f"   - Height: {section_visible['height']}px")
            print(f"   - Left: {section_visible['left']}px")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã
            fields_found = await page.evaluate('''
                () => {
                    return {
                        apiKey: !!document.getElementById('deepseek-api-key'),
                        model: !!document.getElementById('deepseek-model'),
                        travelMemory: !!document.getElementById('deepseek-travel-memory'),
                        saveButton: !!document.querySelector('button:has-text("Save Settings")')
                    };
                }
            ''')
            
            print(f"üîç –ü–æ–ª—è —Ñ–æ—Ä–º—ã:")
            print(f"   - API Key: {'‚úÖ' if fields_found['apiKey'] else '‚ùå'}")
            print(f"   - Model: {'‚úÖ' if fields_found['model'] else '‚ùå'}")
            print(f"   - Travel Memory: {'‚úÖ' if fields_found['travelMemory'] else '‚ùå'}")
            print(f"   - Save Button: {'‚úÖ' if fields_found['saveButton'] else '‚ùå'}")
            
            # –°–∫—Ä–∏–Ω—à–æ—Ç
            await page.screenshot(path="simple_deepseek_test.png", full_page=True)
            print("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: simple_deepseek_test.png")
            
            # –ò—Ç–æ–≥
            if (section_visible['display'] == 'block' and 
                section_visible['left'] >= 250 and 
                fields_found['apiKey'] and 
                fields_found['travelMemory']):
                print("\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! DeepSeek Settings —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
            else:
                print("\n‚ö†Ô∏è –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù. –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º.")
            
            await page.wait_for_timeout(3000)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        finally:
            await browser.close()

if __name__ == "__main__":
    asyncio.run(simple_test())
