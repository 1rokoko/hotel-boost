#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç AI Configuration —Å —Ä–∞–±–æ—Ç–∞—é—â–∏–º —Å–µ—Ä–≤–µ—Ä–æ–º
"""

import asyncio
from playwright.async_api import async_playwright

async def final_test_ai_configuration():
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)
        page = await browser.new_page()
        
        try:
            print("üéâ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ AI CONFIGURATION")
            print("=" * 50)
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
            await page.goto("http://localhost:8000/admin")
            await page.wait_for_load_state('networkidle')
            print("‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            
            # –ò—â–µ–º –ø—É–Ω–∫—Ç –º–µ–Ω—é AI Configuration
            ai_config_link = page.locator('a[data-section="deepseek-config"]')
            if await ai_config_link.count() > 0:
                print("‚úÖ –ü—É–Ω–∫—Ç –º–µ–Ω—é 'AI Configuration' –Ω–∞–π–¥–µ–Ω")
                
                # –ö–ª–∏–∫–∞–µ–º –Ω–∞ AI Configuration
                await ai_config_link.click()
                await page.wait_for_timeout(1000)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞–Ω–∞
                ai_section = page.locator('#deepseek-config-section')
                if await ai_section.count() > 0:
                    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª–∏ —Å–µ–∫—Ü–∏–∏
                    display = await ai_section.evaluate('el => getComputedStyle(el).display')
                    position = await ai_section.evaluate('el => getComputedStyle(el).position')
                    left = await ai_section.evaluate('el => getComputedStyle(el).left')
                    top = await ai_section.evaluate('el => getComputedStyle(el).top')
                    
                    print(f"üìä AI Configuration —Å–µ–∫—Ü–∏—è:")
                    print(f"   Display: {display}")
                    print(f"   Position: {position}")
                    print(f"   Left: {left}")
                    print(f"   Top: {top}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
                    is_visible = display == 'block'
                    is_positioned_correctly = position == 'relative' and left == '0px' and top == '0px'
                    
                    if is_visible and is_positioned_correctly:
                        print("üéâ AI Configuration —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
                        form_elements = {
                            'apiKey': '#ai-api-key',
                            'model': '#ai-model',
                            'maxTokens': '#ai-max-tokens',
                            'temperature': '#ai-temperature',
                            'systemPrompt': '#ai-system-prompt',
                            'saveButton': 'button[onclick="saveAIConfig()"]',
                            'testButton': 'button[onclick="testAIConnection()"]'
                        }
                        
                        print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º—ã:")
                        all_elements_ok = True
                        for name, selector in form_elements.items():
                            element = page.locator(selector)
                            if await element.count() > 0:
                                print(f"   {name}: ‚úÖ –û–ö")
                            else:
                                print(f"   {name}: ‚ùå –ù–ï –ù–ê–ô–î–ï–ù")
                                all_elements_ok = False
                        
                        if all_elements_ok:
                            print("üéâ –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –Ω–∞–π–¥–µ–Ω—ã!")
                            
                            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
                            print("\nüß™ –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞:")
                            
                            # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
                            await page.fill('#ai-api-key', 'test-api-key-12345')
                            await page.select_option('#ai-model', 'deepseek-chat')
                            await page.fill('#ai-max-tokens', '1500')
                            await page.fill('#ai-system-prompt', 'You are a professional hotel assistant. Always be polite and helpful.')
                            
                            print("‚úÖ –§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã
                            api_key_value = await page.input_value('#ai-api-key')
                            model_value = await page.input_value('#ai-model')
                            tokens_value = await page.input_value('#ai-max-tokens')
                            prompt_value = await page.input_value('#ai-system-prompt')
                            
                            print(f"   API Key: {api_key_value[:10]}...")
                            print(f"   Model: {model_value}")
                            print(f"   Max Tokens: {tokens_value}")
                            print(f"   System Prompt: {prompt_value[:30]}...")
                            
                            # –ö–ª–∏–∫–∞–µ–º Save (–Ω–æ –Ω–µ –∂–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞)
                            await page.click('button[onclick="saveAIConfig()"]')
                            await page.wait_for_timeout(1000)
                            print("‚úÖ –ö–Ω–æ–ø–∫–∞ Save –Ω–∞–∂–∞—Ç–∞")
                            
                            # –ö–ª–∏–∫–∞–µ–º Test Connection (–Ω–æ –Ω–µ –∂–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞)
                            await page.click('button[onclick="testAIConnection()"]')
                            await page.wait_for_timeout(1000)
                            print("‚úÖ –ö–Ω–æ–ø–∫–∞ Test Connection –Ω–∞–∂–∞—Ç–∞")
                            
                            print("\nüéâ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
                            print("‚úÖ AI Configuration –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω")
                            print("‚úÖ –í–µ—Ä—Å—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
                            print("‚úÖ –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç")
                            
                        else:
                            print("‚ùå –ù–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –Ω–∞–π–¥–µ–Ω—ã")
                    else:
                        print("‚ùå AI Configuration –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º")
                        print(f"   –í–∏–¥–∏–º–æ—Å—Ç—å: {'‚úÖ' if is_visible else '‚ùå'}")
                        print(f"   –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {'‚úÖ' if is_positioned_correctly else '‚ùå'}")
                else:
                    print("‚ùå AI Configuration —Å–µ–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print("‚ùå –ü—É–Ω–∫—Ç –º–µ–Ω—é 'AI Configuration' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞...")
            await page.wait_for_timeout(15000)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        
        finally:
            await browser.close()

if __name__ == "__main__":
    asyncio.run(final_test_ai_configuration())
