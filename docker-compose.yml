version: '3.8'

services:
  # FastAPI application
  api:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: whatsapp-hotel-bot-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/hotel_bot
      - REDIS_URL=redis://redis:6379
      - DEBUG=true
      - ENVIRONMENT=development
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
    networks:
      - hotel-bot-network

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    container_name: whatsapp-hotel-bot-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: hotel_bot
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hotel_bot"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - hotel-bot-network

  # Redis cache and message broker
  redis:
    image: redis:7-alpine
    container_name: whatsapp-hotel-bot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ""
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - hotel-bot-network

  # Celery worker
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: whatsapp-hotel-bot-celery
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/hotel_bot
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: celery -A app.core.celery worker --loglevel=info
    restart: unless-stopped
    networks:
      - hotel-bot-network

  # Celery beat scheduler
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: whatsapp-hotel-bot-beat
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/hotel_bot
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: celery -A app.core.celery beat --loglevel=info
    restart: unless-stopped
    networks:
      - hotel-bot-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  hotel-bot-network:
    driver: bridge
