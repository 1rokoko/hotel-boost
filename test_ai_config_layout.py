#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤–µ—Ä—Å—Ç–∫–∏ AI Configuration –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞
"""

import asyncio
import os
from playwright.async_api import async_playwright

async def test_ai_config_layout():
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)
        page = await browser.new_page()
        
        try:
            print("üé® –¢–ï–°–¢ –í–ï–†–°–¢–ö–ò AI CONFIGURATION")
            print("=" * 40)
            
            # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ HTML —Ñ–∞–π–ª—É
            current_dir = os.getcwd()
            html_path = os.path.join(current_dir, "app", "templates", "admin_dashboard.html")
            file_url = f"file:///{html_path.replace(os.sep, '/')}"
            
            print(f"üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª: {file_url}")
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º HTML —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é
            await page.goto(file_url)
            await page.wait_for_load_state('networkidle')
            print("‚úÖ HTML —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ CSS –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
            css_loaded = await page.evaluate("""
                () => {
                    const links = document.querySelectorAll('link[rel="stylesheet"]');
                    return links.length > 0;
                }
            """)
            
            if css_loaded:
                print("‚úÖ CSS —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã –≤ HTML")
            else:
                print("‚ö†Ô∏è CSS —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            # –ò—â–µ–º –ø—É–Ω–∫—Ç –º–µ–Ω—é AI Configuration
            ai_config_link = page.locator('a[data-section="deepseek-config"]')
            if await ai_config_link.count() > 0:
                print("‚úÖ –ü—É–Ω–∫—Ç –º–µ–Ω—é 'AI Configuration' –Ω–∞–π–¥–µ–Ω")
                
                # –ö–ª–∏–∫–∞–µ–º –Ω–∞ AI Configuration
                await ai_config_link.click()
                await page.wait_for_timeout(1000)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ü–∏—é AI Configuration
                ai_section = page.locator('#deepseek-config-section')
                if await ai_section.count() > 0:
                    print("‚úÖ AI Configuration —Å–µ–∫—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞")
                    
                    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª–∏ —Å–µ–∫—Ü–∏–∏
                    styles = await ai_section.evaluate("""
                        el => {
                            const computed = getComputedStyle(el);
                            return {
                                display: computed.display,
                                position: computed.position,
                                left: computed.left,
                                top: computed.top,
                                transform: computed.transform
                            };
                        }
                    """)
                    
                    print(f"üìä –°—Ç–∏–ª–∏ AI Configuration —Å–µ–∫—Ü–∏–∏:")
                    print(f"   Display: {styles['display']}")
                    print(f"   Position: {styles['position']}")
                    print(f"   Left: {styles['left']}")
                    print(f"   Top: {styles['top']}")
                    print(f"   Transform: {styles['transform']}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
                    is_visible = styles['display'] == 'block'
                    is_positioned_correctly = (
                        styles['position'] == 'relative' and 
                        styles['left'] == '0px' and 
                        styles['top'] == '0px'
                    )
                    
                    print(f"\nüîç –ê–Ω–∞–ª–∏–∑ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:")
                    print(f"   –í–∏–¥–∏–º–æ—Å—Ç—å: {'‚úÖ –û–ö' if is_visible else '‚ùå –ù–ï –û–ö'}")
                    print(f"   –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {'‚úÖ –û–ö' if is_positioned_correctly else '‚ùå –ù–ï –û–ö'}")
                    
                    if is_visible and is_positioned_correctly:
                        print("\nüéâ –í–ï–†–°–¢–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê –£–°–ü–ï–®–ù–û!")
                        print("‚úÖ AI Configuration –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                        print("‚úÖ –ù–µ—Ç —Å–º–µ—â–µ–Ω–∏—è –≤–ª–µ–≤–æ")
                    else:
                        print("\n‚ùå –í–ï–†–°–¢–ö–ê –¢–†–ï–ë–£–ï–¢ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô")
                        
                        if not is_visible:
                            print("   - –°–µ–∫—Ü–∏—è –Ω–µ –≤–∏–¥–Ω–∞")
                        if not is_positioned_correctly:
                            print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
                else:
                    print("‚ùå AI Configuration —Å–µ–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print("‚ùå –ü—É–Ω–∫—Ç –º–µ–Ω—é 'AI Configuration' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
            # –ñ–¥–µ–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞...")
            await page.wait_for_timeout(10000)
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        
        finally:
            await browser.close()

if __name__ == "__main__":
    asyncio.run(test_ai_config_layout())
