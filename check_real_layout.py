#!/usr/bin/env python3
"""
Real Layout Check - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å—Ç–∫–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ
"""

import asyncio
from playwright.async_api import async_playwright
import time

async def check_real_layout():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å—Ç–∫–∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"""
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)
        page = await browser.new_page()
        
        print("üîç –ü–†–û–í–ï–†–ö–ê –†–ï–ê–õ–¨–ù–û–ô –í–ï–†–°–¢–ö–ò –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò")
        print("=" * 60)
        
        try:
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
            print("üìç –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ http://localhost:8000/api/v1/admin/dashboard")
            await page.goto("http://localhost:8000/api/v1/admin/dashboard")
            await page.wait_for_load_state('networkidle')
            
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ª–∏ CSS —Ñ–∞–π–ª
            print("\nüé® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CSS...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ CSS
            css_link = await page.query_selector('link[href*="admin_dashboard.css"]')
            if css_link:
                href = await css_link.get_attribute('href')
                print(f"‚úÖ CSS —Å—Å—ã–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {href}")
            else:
                print("‚ùå CSS —Å—Å—ã–ª–∫–∞ –ù–ï –Ω–∞–π–¥–µ–Ω–∞!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –ª–∏ —Å—Ç–∏–ª–∏ –∫ sidebar
            print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª–µ–π sidebar...")
            sidebar = await page.query_selector('.sidebar')
            if sidebar:
                # –ü–æ–ª—É—á–∞–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏
                styles = await page.evaluate('''
                    () => {
                        const sidebar = document.querySelector('.sidebar');
                        if (!sidebar) return null;
                        
                        const computed = window.getComputedStyle(sidebar);
                        return {
                            position: computed.position,
                            width: computed.width,
                            left: computed.left,
                            background: computed.background,
                            zIndex: computed.zIndex
                        };
                    }
                ''')
                
                print(f"üìä –°—Ç–∏–ª–∏ sidebar:")
                print(f"   - Position: {styles['position']}")
                print(f"   - Width: {styles['width']}")
                print(f"   - Left: {styles['left']}")
                print(f"   - Z-Index: {styles['zIndex']}")
                print(f"   - Background: {styles['background'][:50]}...")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
                if styles['position'] == 'fixed' and styles['width'] == '250px':
                    print("‚úÖ Sidebar –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω!")
                else:
                    print("‚ùå Sidebar –ù–ï –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω!")
            else:
                print("‚ùå Sidebar –ù–ï –Ω–∞–π–¥–µ–Ω!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º main-content
            print("\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ main-content...")
            main_content = await page.query_selector('.main-content')
            if main_content:
                main_styles = await page.evaluate('''
                    () => {
                        const main = document.querySelector('.main-content');
                        if (!main) return null;
                        
                        const computed = window.getComputedStyle(main);
                        return {
                            marginLeft: computed.marginLeft,
                            width: computed.width,
                            padding: computed.padding
                        };
                    }
                ''')
                
                print(f"üìä –°—Ç–∏–ª–∏ main-content:")
                print(f"   - Margin Left: {main_styles['marginLeft']}")
                print(f"   - Width: {main_styles['width']}")
                print(f"   - Padding: {main_styles['padding']}")
                
                if main_styles['marginLeft'] == '250px':
                    print("‚úÖ Main content –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω!")
                else:
                    print("‚ùå Main content –ù–ï –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω!")
            else:
                print("‚ùå Main content –ù–ï –Ω–∞–π–¥–µ–Ω!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
            print("\nüÉè –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª–µ–π –∫–∞—Ä—Ç–æ—á–µ–∫...")
            cards = await page.query_selector_all('.card')
            if len(cards) > 0:
                card_styles = await page.evaluate('''
                    () => {
                        const card = document.querySelector('.card');
                        if (!card) return null;
                        
                        const computed = window.getComputedStyle(card);
                        return {
                            borderRadius: computed.borderRadius,
                            boxShadow: computed.boxShadow,
                            border: computed.border
                        };
                    }
                ''')
                
                print(f"üìä –°—Ç–∏–ª–∏ –∫–∞—Ä—Ç–æ—á–µ–∫:")
                print(f"   - Border Radius: {card_styles['borderRadius']}")
                print(f"   - Border: {card_styles['border']}")
                print(f"   - Box Shadow: {card_styles['boxShadow'][:50]}...")
                
                if card_styles['borderRadius'] == '15px':
                    print("‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω—ã!")
                else:
                    print("‚ùå –ö–∞—Ä—Ç–æ—á–∫–∏ –ù–ï –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω—ã!")
            else:
                print("‚ùå –ö–∞—Ä—Ç–æ—á–∫–∏ –ù–ï –Ω–∞–π–¥–µ–Ω—ã!")
            
            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            print("\nüì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç...")
            await page.screenshot(path="admin_dashboard_layout_check.png", full_page=True)
            print("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: admin_dashboard_layout_check.png")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
            print("\nüì± –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏...")
            await page.set_viewport_size({"width": 600, "height": 800})
            await page.wait_for_timeout(1000)
            
            mobile_toggle = await page.query_selector('.mobile-menu-toggle')
            if mobile_toggle:
                toggle_styles = await page.evaluate('''
                    () => {
                        const toggle = document.querySelector('.mobile-menu-toggle');
                        if (!toggle) return null;
                        
                        const computed = window.getComputedStyle(toggle);
                        return {
                            display: computed.display
                        };
                    }
                ''')
                
                print(f"üì± Mobile toggle display: {toggle_styles['display']}")
                if toggle_styles['display'] == 'block':
                    print("‚úÖ –ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –≤–∏–¥–Ω–∞!")
                else:
                    print("‚ùå –ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ù–ï –≤–∏–¥–Ω–∞!")
            else:
                print("‚ùå –ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ù–ï –Ω–∞–π–¥–µ–Ω–∞!")
            
            # –°–∫—Ä–∏–Ω—à–æ—Ç –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
            await page.screenshot(path="admin_dashboard_mobile_check.png", full_page=True)
            print("‚úÖ –ú–æ–±–∏–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: admin_dashboard_mobile_check.png")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ª–∏ CSS —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é
            print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ CSS...")
            css_response = await page.goto("http://localhost:8000/static/css/admin_dashboard.css")
            if css_response and css_response.status == 200:
                print("‚úÖ CSS —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞–ø—Ä—è–º—É—é!")
                css_content = await css_response.text()
                print(f"‚úÖ –†–∞–∑–º–µ—Ä CSS —Ñ–∞–π–ª–∞: {len(css_content)} —Å–∏–º–≤–æ–ª–æ–≤")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ CSS –ø—Ä–∞–≤–∏–ª–∞
                key_rules = ["nav.sidebar", "position: fixed", "width: 250px"]
                for rule in key_rules:
                    if rule in css_content:
                        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ: {rule}")
                    else:
                        print(f"   ‚ùå –ù–ï –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ: {rule}")
            else:
                print("‚ùå CSS —Ñ–∞–π–ª –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞–ø—Ä—è–º—É—é!")
            
            print("\n" + "=" * 60)
            print("üìã –ò–¢–û–ì–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–ï–†–°–¢–ö–ò")
            print("=" * 60)
            
            print("üéØ –ß–¢–û –ü–†–û–í–ï–†–ò–õ–ò:")
            print("   - –ó–∞–≥—Ä—É–∑–∫–∞ CSS —Ñ–∞–π–ª–∞")
            print("   - –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ sidebar")
            print("   - –û—Ç—Å—Ç—É–ø—ã main-content")
            print("   - –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫")
            print("   - –ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å")
            print("   - –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ CSS")
            
            print("\nüì∏ –°–ö–†–ò–ù–®–û–¢–´ –°–û–•–†–ê–ù–ï–ù–´:")
            print("   - admin_dashboard_layout_check.png (–¥–µ—Å–∫—Ç–æ–ø)")
            print("   - admin_dashboard_mobile_check.png (–º–æ–±–∏–ª—å–Ω–∞—è)")
            
            print("\nüîç –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
            print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≤–∏–∑—É–∞–ª—å–Ω–æ")
            print("   2. –ï—Å–ª–∏ —Å—Ç–∏–ª–∏ –Ω–µ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞")
            print("   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
            print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏")
            
            # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
            print("\n‚è∞ –û—Å—Ç–∞–≤–ª—è–µ–º –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–∞ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...")
            await page.wait_for_timeout(10000)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        finally:
            await browser.close()

if __name__ == "__main__":
    asyncio.run(check_real_layout())
