#!/usr/bin/env python3
"""
Navigation Test - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
"""

import asyncio
from playwright.async_api import async_playwright

async def test_navigation():
    """–¢–µ—Å—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ sidebar"""
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)
        page = await browser.new_page()
        
        print("üß≠ –¢–ï–°–¢ –ù–ê–í–ò–ì–ê–¶–ò–ò SIDEBAR")
        print("=" * 40)
        
        try:
            await page.goto("http://localhost:8000/api/v1/admin/dashboard")
            await page.wait_for_load_state('networkidle')
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            nav_elements = await page.evaluate('''
                () => {
                    const links = document.querySelectorAll('.sidebar .nav-link');
                    const results = [];
                    
                    links.forEach((link, index) => {
                        const rect = link.getBoundingClientRect();
                        const section = link.getAttribute('data-section');
                        const text = link.textContent.trim();
                        
                        results.push({
                            index: index,
                            section: section,
                            text: text,
                            visible: rect.width > 0 && rect.height > 0,
                            inViewport: rect.top >= 0 && rect.bottom <= window.innerHeight,
                            top: rect.top,
                            bottom: rect.bottom,
                            left: rect.left,
                            width: rect.width
                        });
                    });
                    
                    return results;
                }
            ''')
            
            print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(nav_elements)}")
            
            for element in nav_elements:
                status = "‚úÖ" if element['visible'] and element['inViewport'] else "‚ùå"
                viewport_status = "–≤ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏" if element['inViewport'] else "–í–ù–ï –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏"
                print(f"   {status} {element['text']} ({element['section']}) - {viewport_status}")
                if not element['inViewport']:
                    print(f"      Top: {element['top']}, Bottom: {element['bottom']}")
            
            # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å sidebar, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            deepseek_settings_link = None
            for element in nav_elements:
                if element['section'] == 'deepseek-settings':
                    deepseek_settings_link = element
                    break
            
            if deepseek_settings_link and not deepseek_settings_link['inViewport']:
                print(f"\nüîÑ DeepSeek Settings –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å...")
                
                # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º sidebar
                await page.evaluate('''
                    () => {
                        const sidebar = document.querySelector('.sidebar');
                        const link = document.querySelector('a[data-section="deepseek-settings"]');
                        if (sidebar && link) {
                            link.scrollIntoView({ behavior: 'smooth', block: 'center' });
                        }
                    }
                ''')
                
                await page.wait_for_timeout(1000)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
                link_visible = await page.evaluate('''
                    () => {
                        const link = document.querySelector('a[data-section="deepseek-settings"]');
                        if (!link) return false;
                        
                        const rect = link.getBoundingClientRect();
                        return rect.top >= 0 && rect.bottom <= window.innerHeight;
                    }
                ''')
                
                print(f"   –ü–æ—Å–ª–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏: {'‚úÖ –í–ò–î–ò–ú' if link_visible else '‚ùå –í–°–ï –ï–©–ï –ù–ï –í–ò–î–ò–ú'}")
            
            # –ü—Ä–æ–±—É–µ–º –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ DeepSeek Settings
            print(f"\nüß† –ü—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–π—Ç–∏ –≤ DeepSeek Settings...")
            
            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –∫–ª–∏–∫ –≤–º–µ—Å—Ç–æ Playwright –∫–ª–∏–∫–∞
                await page.evaluate('''
                    () => {
                        const link = document.querySelector('a[data-section="deepseek-settings"]');
                        if (link) {
                            link.click();
                        }
                    }
                ''')
                
                await page.wait_for_timeout(2000)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ–∫—Ü–∏—è –æ—Ç–∫—Ä—ã–ª–∞—Å—å
                section_visible = await page.evaluate('''
                    () => {
                        const section = document.getElementById('deepseek-settings-section');
                        return section && window.getComputedStyle(section).display === 'block';
                    }
                ''')
                
                print(f"   DeepSeek Settings —Å–µ–∫—Ü–∏—è: {'‚úÖ –û–¢–ö–†–´–¢–ê' if section_visible else '‚ùå –ù–ï –û–¢–ö–†–´–¢–ê'}")
                
                if section_visible:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
                    position_check = await page.evaluate('''
                        () => {
                            const section = document.getElementById('deepseek-settings-section');
                            if (!section) return null;
                            
                            const rect = section.getBoundingClientRect();
                            return {
                                left: rect.left,
                                width: rect.width,
                                properlyPositioned: rect.left >= 250
                            };
                        }
                    ''')
                    
                    if position_check:
                        print(f"   –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {'‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û–ï' if position_check['properlyPositioned'] else '‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û–ï'}")
                        print(f"   Left: {position_check['left']}px, Width: {position_check['width']}px")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ: {e}")
            
            # –°–∫—Ä–∏–Ω—à–æ—Ç
            await page.screenshot(path="navigation_test.png", full_page=True)
            print(f"\nüì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: navigation_test.png")
            
            await page.wait_for_timeout(3000)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        finally:
            await browser.close()

if __name__ == "__main__":
    asyncio.run(test_navigation())
