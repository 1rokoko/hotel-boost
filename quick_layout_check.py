#!/usr/bin/env python3
"""
Quick Layout Check - –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å—Ç–∫–∏
"""

import asyncio
from playwright.async_api import async_playwright

async def quick_check():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å—Ç–∫–∏"""
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)
        page = await browser.new_page()
        
        print("‚ö° –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–ï–†–°–¢–ö–ò")
        print("=" * 40)
        
        try:
            await page.goto("http://localhost:8000/api/v1/admin/dashboard")
            await page.wait_for_load_state('networkidle')
            
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º sidebar
            sidebar_fixed = await page.evaluate('''
                () => {
                    const sidebar = document.querySelector('.sidebar');
                    if (!sidebar) return false;
                    const style = window.getComputedStyle(sidebar);
                    return style.position === 'fixed' && style.width === '250px';
                }
            ''')
            
            print(f"üîß Sidebar fixed: {'‚úÖ –î–ê' if sidebar_fixed else '‚ùå –ù–ï–¢'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º main-content
            main_margin = await page.evaluate('''
                () => {
                    const main = document.querySelector('.main-content');
                    if (!main) return false;
                    const style = window.getComputedStyle(main);
                    return style.marginLeft === '250px';
                }
            ''')
            
            print(f"üìÑ Main margin: {'‚úÖ –î–ê' if main_margin else '‚ùå –ù–ï–¢'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
            cards_styled = await page.evaluate('''
                () => {
                    const card = document.querySelector('.card');
                    if (!card) return false;
                    const style = window.getComputedStyle(card);
                    return style.borderRadius === '15px';
                }
            ''')
            
            print(f"üÉè Cards styled: {'‚úÖ –î–ê' if cards_styled else '‚ùå –ù–ï–¢'}")
            
            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
            await page.screenshot(path="quick_check.png", full_page=True)
            print("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: quick_check.png")
            
            if sidebar_fixed and main_margin and cards_styled:
                print("\nüéâ –í–°–ï –°–¢–ò–õ–ò –ü–†–ò–ú–ï–ù–ò–õ–ò–°–¨ –ü–†–ê–í–ò–õ–¨–ù–û!")
            else:
                print("\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –°–¢–ò–õ–ò –ù–ï –ü–†–ò–ú–ï–ù–ò–õ–ò–°–¨")
                print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏")
            
            await page.wait_for_timeout(3000)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        finally:
            await browser.close()

if __name__ == "__main__":
    asyncio.run(quick_check())
